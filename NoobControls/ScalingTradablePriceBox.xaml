<UserControl x:Class="NoobControls.ScalingTradablePriceBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:nbctrls="clr-namespace:NoobControls"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <!-- Note: If the FontSize property were ALSO specified, it would override the value from this attached property -->
    <UserControl.Resources>
        <Style x:Key="RegularText" TargetType="{x:Type TextBlock}">
            <Setter Value="20" Property="FontSize"></Setter>
        </Style>
        <Style x:Key="BoldText" TargetType="{x:Type TextBlock}">
            <Setter Value="20" Property="FontSize"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
        </Style>

        <Style x:Key="LargeText" TargetType="{x:Type TextBlock}">
            <Setter Value="40" Property="FontSize"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
        </Style>
        <LinearGradientBrush x:Key="BackgroundGradientBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0" Color="PaleGreen"></GradientStop>
                <GradientStop Offset="1.0" Color="Green"></GradientStop>
                <!--GradientStop Offset="1.0" Color="Green"></-->

            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
    </UserControl.Resources>

    <!-- 
    Attached Properties
    *******************
    Note the TextElement.FontSize syntax in the Window declaration above.
    This is an attached property. It can be set at any point in the object tree, unlike e.g. StackPanel which has no such property anyway.
    
    -->
        <Grid ShowGridLines="False" Background="{StaticResource BackgroundGradientBrush}" TextElement.FontSize="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="4*"/>
            </Grid.RowDefinitions>

            <Viewbox Grid.Row="0" HorizontalAlignment="Left" Margin="2,0,0,0">
                <TextBlock Style="{StaticResource RegularText}">Bid</TextBlock>
            </Viewbox>

            <Border Grid.Row="1" Margin="2" CornerRadius="5" BorderBrush="DarkGreen" BorderThickness="2">

                <Grid Grid.Row="1" ShowGridLines="False" TextElement.FontSize="2">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>


                    <Viewbox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="2,0,0,0" HorizontalAlignment="Left" >
                        <TextBlock Style="{StaticResource BoldText}">1.07</TextBlock>
                    </Viewbox>

                    <nbctrls:PriceArrow Grid.Row="0" Grid.Column="2" Margin="0,2,2,0"/>
                    <!-- 
                How to align differently-sized text fields such that they vertically share the same baseline is not obvious.
                The use of custom margins/padding is strongly discouraged - as soon as any element of the font is changed, this kind of tinkering will break.
                Indeed, I found many efforts to enforce the alignment in code rather than using XAML.
                In fact, it is trivial to accomplish - wrap them in an outer textblock.
                -->
                    <Viewbox Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" Grid.ColumnSpan="3">
                        <TextBlock Margin="0" Padding="0">
                        <!-- <TextBlock Style="{StaticResource LargeText}">33</TextBlock> -->
                            <TextBlock Style="{StaticResource LargeText}">33</TextBlock>
                            <TextBlock Style ="{StaticResource BoldText}">915</TextBlock>
                    </TextBlock>
                    </Viewbox>

                    <Viewbox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left">
                        <TextBlock Margin="0" Padding="0" Style="{StaticResource RegularText}">
                            <Hyperlink>Enable</Hyperlink>
                        </TextBlock>
                    </Viewbox>
                </Grid>
            </Border>
        </Grid>
</UserControl>
